version: '3.8'

services:
  # Zookeeper for Kafka coordination
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper-1
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - flink-network

  # Kafka for event streaming
  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-1:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    networks:
      - flink-network

  # Kafka initialization
  kafka-setup:
    image: bitnami/kafka:3.4
    container_name: kafka-setup
    depends_on:
      - kafka
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...' &&
        sleep 20 &&
        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 4 --topic ad-impressions &&
        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 4 --topic ad-clicks &&
        echo 'Kafka topics created.'
      "
    networks:
      - flink-network

  # Data Generator
  data-generator:
    build:
      context: ./data-generator
      dockerfile: Dockerfile
    container_name: data-generator
    depends_on:
      - kafka-setup
    environment:
      - KAFKA_BROKER=kafka:9092
      - IMPRESSION_TOPIC=ad-impressions
      - CLICK_TOPIC=ad-clicks
      - EVENT_RATE=50  # Events per second
      - CLICK_RATIO=0.1 # 10% of impressions get clicks
    networks:
      - flink-network

  # Flink JobManager
  flink-jobmanager:
    image: apache/flink:1.18.1-scala_2.12-python3 # Asegúrate de usar la versión con Python
    container_name: flink-jobmanager
    ports:
      - "8081:8081" # Interfaz web de Flink
    command: ["jobmanager"]
    environment:
      # --- CORREGIDO ---
      - FLINK_PROPERTIES=jobmanager.rpc.address=flink-jobmanager
      # --- FIN CORRECCIÓN ---
    depends_on:
      - kafka-setup
    networks:
      - flink-network

  # Flink TaskManager
  flink-taskmanager:
    image: apache/flink:1.18.1-scala_2.12-python3 # Debe coincidir con la versión del JobManager
    container_name: flink-taskmanager
    command: ["taskmanager"]
    environment:
      # --- CORREGIDO ---
      - FLINK_PROPERTIES=jobmanager.rpc.address=flink-jobmanager
      # --- FIN CORRECCIÓN ---
    depends_on:
      - flink-jobmanager
    networks:
      - flink-network

  # Flink Job
  flink-job:
    build:
      context: ./flink-job # Directorio con tu Dockerfile del job
      dockerfile: Dockerfile
    container_name: flink-job
    depends_on:
      - flink-jobmanager
      - kafka-setup
    networks:
      - flink-network

networks:
  flink-network:
    driver: bridge